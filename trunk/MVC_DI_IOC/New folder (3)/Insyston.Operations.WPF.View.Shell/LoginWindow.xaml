<Window x:Class="Insyston.Operations.WPF.Views.Shell.LoginWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dp="clr-namespace:Insyston.Operations.WPF.Views.Common.AttachedProperties;assembly=Insyston.Operations.WPF.Views.Common"
        xmlns:con="http://schemas.kent.boogaart.com/converters"
        xmlns:login="clr-namespace:Insyston.Operations.WPF.ViewModels.Shell;assembly=Insyston.Operations.WPF.ViewModels.Shell"
        xmlns:attached="clr-namespace:Insyston.Operations.WPF.Views.Common.AttachedProperties;assembly=Insyston.Operations.WPF.Views.Common"
        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
        xmlns:prismInteractivity="http://schemas.microsoft.com/expression/2010/interactivity"        
        xmlns:common="clr-namespace:Insyston.Operations.WPF.Views.Common;assembly=Insyston.Operations.WPF.Views.Common"
        xmlns:xmalIcons="clr-namespace:Insyston.Operations.WPF.Views.Common.Commands;assembly=Insyston.Operations.WPF.Views.Common"        
        WindowStyle="None" ResizeMode="NoResize" WindowStartupLocation="Manual" Icon="GreenLogo.ico"
        Width="700" Height="364" x:Name="Window">

    <!--<prismInteractivity:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding ElementName=Window, Path= DataContext.ActiveViewModel.NotificationWindow, Mode=OneWay}">
            <common:PopupModalWindowAction />
        </prism:InteractionRequestTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding ElementName=Window, Path=DataContext.ActiveViewModel.ConfirmationWindow, Mode=OneWay}">
            <common:PopupModalWindowAction />
        </prism:InteractionRequestTrigger>
    </prismInteractivity:Interaction.Triggers>-->
    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Duration="00:00:01" Storyboard.TargetProperty="Opacity" From="0" To="1" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>
    <Window.Resources>
        <Storyboard x:Key="FadeOut">
            <DoubleAnimation Duration="00:00:01" Storyboard.TargetName="Window" Storyboard.TargetProperty="Opacity" From="1" To="0" />
        </Storyboard>
        <Style TargetType="{x:Type Button}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#178ec7" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Background="#333333" FocusManager.FocusedElement="{Binding ElementName=UserNameTextBox}">
        <Grid.RowDefinitions>
            <RowDefinition Height="70"></RowDefinition>
            <RowDefinition Height="2"></RowDefinition>
            <RowDefinition Height="220"></RowDefinition>
            <RowDefinition Height="2"></RowDefinition>
            <RowDefinition Height="70"></RowDefinition>
        </Grid.RowDefinitions>
        <Border Grid.Row="1" Background="#1ba1e2" />
        <Image Grid.Row="2" Source="Images/Background/Background01.jpg"/>
        <Border Grid.Row="3" Background="#1ba1e2" />

        <Grid Grid.Row="0" Margin="10,0,10,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="57"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Image Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Left" VerticalAlignment="Center" Source="Images/Logo.png" Stretch="None" />
            <TextBlock Grid.Column="1" Grid.Row="0" Text="Operations Launchpad" HorizontalAlignment="Right" VerticalAlignment="Bottom" FontWeight="Bold" FontSize="20" Foreground="White"  />
            <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding AssemblyVersion, Mode=OneWay}" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="White"  />
        </Grid>
        <StackPanel Grid.Row="2" Orientation="Horizontal" >
            <StackPanel Width="300" Height="Auto" Background="#333333" Margin="105,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center">
                <Grid Margin="20,20,20,20" IsEnabled="{Binding IsChangePasswordFormAvailable, Converter={con:ExpressionConverter !{0} }}" Visibility="{Binding IsLoginFormAvailable,Converter={StaticResource boolToVisibility}}">
                    <Grid.Resources>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition  Binding="{Binding IsLoginFormAvailable}" Value="True" />
                                        <Condition  Binding="{Binding IsChangePasswordFormAvailable}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="attached:AttachInputBindings.InputBindings">
                                        <Setter.Value>
                                            <InputBindingCollection>
                                                <KeyBinding Key="Enter" Command="{Binding OnUseCaseStepChanged}" CommandParameter="{x:Static login:LoginViewModel+EnumStep.Login}" />
                                            </InputBindingCollection>
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition  Binding="{Binding IsLoginFormAvailable}" Value="True" />
                                        <Condition  Binding="{Binding IsChangePasswordFormAvailable}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="00:00:00.5" Storyboard.TargetProperty="Opacity" From="1" To="0" />
                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00.5" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Collapsed</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Label Grid.Column="0" Grid.Row="0" Content="User Name:" Target="{Binding ElementName=UserNameTextBox}" HorizontalAlignment="Left" Foreground="White" Margin="0,5,10,5" />
                    <TextBox x:Name="UserNameTextBox" Grid.Column="1" Grid.Row="0" Margin="0,5" Text="{Binding Path=UserName, Mode=TwoWay, ValidatesOnNotifyDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                    <Label Grid.Column="0" Grid.Row="1" Content="Password:" Target="{Binding ElementName=PasswordTextBox}" HorizontalAlignment="Left" Foreground="White" Margin="0,5,10,5" />
                    <PasswordBox x:Name="PasswordTextBox" Grid.Column="1" Grid.Row="1" Margin="0,5" dp:PasswordBoxAssistant.BindPassword="true" dp:PasswordBoxAssistant.BoundPassword="{Binding Path=Password, Mode=TwoWay, ValidatesOnNotifyDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                    <StackPanel Grid.Column="1" Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                        <Button Margin="10,5,0,0" Padding="5,5,5,5" Background="#1ba1e2" Foreground="White" Command="{Binding OnUseCaseStepChanged}" CommandParameter="{x:Static login:LoginViewModel+EnumStep.Login}">Login</Button>
                        <Button Margin="10,5,0,0" Padding="5,5,5,5" Background="#1ba1e2" Foreground="White" Command="{Binding OnUseCaseStepChanged}" CommandParameter="{x:Static login:LoginViewModel+EnumStep.Cancel}">Cancel</Button>
                    </StackPanel>
                </Grid>
                <Grid Margin="20,20,20,20" Visibility="Collapsed">
                    <Grid.Resources>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChangePasswordFormAvailable}" Value="True">
                                    <Setter Property="attached:AttachInputBindings.InputBindings">
                                        <Setter.Value>
                                            <InputBindingCollection>
                                                <KeyBinding Key="Enter" Command="{Binding OnUseCaseStepChanged}" CommandParameter="{x:Static login:LoginViewModel+EnumStep.ChangePassword}" />
                                            </InputBindingCollection>
                                        </Setter.Value>
                                    </Setter>
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation BeginTime="00:00:00.5" Duration="00:00:00.5" Storyboard.TargetProperty="Opacity" From="0" To="1" />
                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00.5" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Label Grid.Column="0" Grid.Row="0" Content="New Password:" Target="{Binding ElementName=NewPasswordTextBoxTextBox}" HorizontalAlignment="Left" Foreground="White" Margin="0,5,10,5" />
                    <PasswordBox x:Name="NewPasswordTextBoxTextBox" Grid.Column="1" Grid.Row="0" Margin="0,5" dp:PasswordBoxAssistant.BindPassword="true" dp:PasswordBoxAssistant.BoundPassword="{Binding Path=NewPassword, Mode=TwoWay, ValidatesOnNotifyDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                    <Label Grid.Column="0" Grid.Row="1" Content="Confirm Password:" Target="{Binding ElementName=ConfirmPasswordTextBox}" HorizontalAlignment="Left" Foreground="White" Margin="0,5,10,5" />
                    <PasswordBox x:Name="ConfirmPasswordTextBox" Grid.Column="1" Grid.Row="1" Margin="0,5" dp:PasswordBoxAssistant.BindPassword="true" dp:PasswordBoxAssistant.BoundPassword="{Binding Path=ConfirmPassword, Mode=TwoWay, ValidatesOnNotifyDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                    <StackPanel Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                        <Button Margin="10,5,0,0" Padding="5,5,5,5" Background="#1ba1e2" Foreground="White" Command="{Binding OnUseCaseStepChanged}" CommandParameter="{x:Static login:LoginViewModel+EnumStep.ChangePassword}">Change Password</Button>
                        <Button Margin="10,5,0,0" Padding="5,5,5,5" Background="#1ba1e2" Foreground="White" Command="{Binding OnUseCaseStepChanged}" CommandParameter="{x:Static login:LoginViewModel+EnumStep.Continue}" IsEnabled="{Binding Path=EnforceChangePassword, Converter={con:ExpressionConverter !{0} }}">Continue</Button>
                        <Button Margin="10,5,0,0" Padding="5,5,5,5" Background="#1ba1e2" Foreground="White" Command="{Binding OnUseCaseStepChanged}" CommandParameter="{x:Static login:LoginViewModel+EnumStep.Cancel}">Cancel</Button>
                    </StackPanel>
                </Grid>
            </StackPanel>
        </StackPanel>
        <Grid Grid.Row="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <telerik:RadListBox Grid.Column="0" ItemsSource="{Binding ValidationSummary, Mode=OneWay}" ItemTemplate="{StaticResource ErrorsDataTemplate}" BorderThickness="0" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled" />
            <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                <Button Margin="0,0,10,0" Background="#1ba1e2" Foreground="White" Click="TwitterButton_Click">
                    <xmalIcons:Twitter Width="48" Height="48" />
                </Button>
                <Button Margin="0,0,10,0" Background="#1ba1e2" Foreground="White" Click="LinkedInButton_Click">
                    <xmalIcons:LinkedIn Width="48" Height="48" />
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
