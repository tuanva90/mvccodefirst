//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DemoWF.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/OfficalWCF.Entities")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RequireDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipViaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShippedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIDField, value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Freight {
            get {
                return this.FreightField;
            }
            set {
                if ((this.FreightField.Equals(value) != true)) {
                    this.FreightField = value;
                    this.RaisePropertyChanged("Freight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RequireDate {
            get {
                return this.RequireDateField;
            }
            set {
                if ((this.RequireDateField.Equals(value) != true)) {
                    this.RequireDateField = value;
                    this.RaisePropertyChanged("RequireDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipVia {
            get {
                return this.ShipViaField;
            }
            set {
                if ((this.ShipViaField.Equals(value) != true)) {
                    this.ShipViaField = value;
                    this.RaisePropertyChanged("ShipVia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShippedDate {
            get {
                return this.ShippedDateField;
            }
            set {
                if ((this.ShippedDateField.Equals(value) != true)) {
                    this.ShippedDateField = value;
                    this.RaisePropertyChanged("ShippedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/OfficalWCF.Entities")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PictureField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Picture {
            get {
                return this.PictureField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureField, value) != true)) {
                    this.PictureField = value;
                    this.RaisePropertyChanged("Picture");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/OfficalWCF.Entities")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassWordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((this.CustomerIDField.Equals(value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassWord {
            get {
                return this.PassWordField;
            }
            set {
                if ((object.ReferenceEquals(this.PassWordField, value) != true)) {
                    this.PassWordField = value;
                    this.RaisePropertyChanged("PassWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.Service1")]
    public interface Service1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service1/Test", ReplyAction="http://tempuri.org/Service1/TestResponse")]
        DemoWF.ServiceReference2.Order[] Test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service1/Test", ReplyAction="http://tempuri.org/Service1/TestResponse")]
        System.Threading.Tasks.Task<DemoWF.ServiceReference2.Order[]> TestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service1/Test1", ReplyAction="http://tempuri.org/Service1/Test1Response")]
        DemoWF.ServiceReference2.Category Test1(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service1/Test1", ReplyAction="http://tempuri.org/Service1/Test1Response")]
        System.Threading.Tasks.Task<DemoWF.ServiceReference2.Category> Test1Async(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service1/TestAdd", ReplyAction="http://tempuri.org/Service1/TestAddResponse")]
        string TestAdd(DemoWF.ServiceReference2.Order cate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service1/TestAdd", ReplyAction="http://tempuri.org/Service1/TestAddResponse")]
        System.Threading.Tasks.Task<string> TestAddAsync(DemoWF.ServiceReference2.Order cate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service1/TestUpdate", ReplyAction="http://tempuri.org/Service1/TestUpdateResponse")]
        string TestUpdate(DemoWF.ServiceReference2.Order cate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service1/TestUpdate", ReplyAction="http://tempuri.org/Service1/TestUpdateResponse")]
        System.Threading.Tasks.Task<string> TestUpdateAsync(DemoWF.ServiceReference2.Order cate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service1/TestDelete", ReplyAction="http://tempuri.org/Service1/TestDeleteResponse")]
        string TestDelete(DemoWF.ServiceReference2.Order cate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service1/TestDelete", ReplyAction="http://tempuri.org/Service1/TestDeleteResponse")]
        System.Threading.Tasks.Task<string> TestDeleteAsync(DemoWF.ServiceReference2.Order cate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service1/TestGetUser", ReplyAction="http://tempuri.org/Service1/TestGetUserResponse")]
        string TestGetUser(string user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service1/TestGetUser", ReplyAction="http://tempuri.org/Service1/TestGetUserResponse")]
        System.Threading.Tasks.Task<string> TestGetUserAsync(string user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service1/TestAddUser", ReplyAction="http://tempuri.org/Service1/TestAddUserResponse")]
        string TestAddUser(DemoWF.ServiceReference2.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service1/TestAddUser", ReplyAction="http://tempuri.org/Service1/TestAddUserResponse")]
        System.Threading.Tasks.Task<string> TestAddUserAsync(DemoWF.ServiceReference2.User user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Service1Channel : DemoWF.ServiceReference2.Service1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<DemoWF.ServiceReference2.Service1>, DemoWF.ServiceReference2.Service1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DemoWF.ServiceReference2.Order[] Test() {
            return base.Channel.Test();
        }
        
        public System.Threading.Tasks.Task<DemoWF.ServiceReference2.Order[]> TestAsync() {
            return base.Channel.TestAsync();
        }
        
        public DemoWF.ServiceReference2.Category Test1(int id) {
            return base.Channel.Test1(id);
        }
        
        public System.Threading.Tasks.Task<DemoWF.ServiceReference2.Category> Test1Async(int id) {
            return base.Channel.Test1Async(id);
        }
        
        public string TestAdd(DemoWF.ServiceReference2.Order cate) {
            return base.Channel.TestAdd(cate);
        }
        
        public System.Threading.Tasks.Task<string> TestAddAsync(DemoWF.ServiceReference2.Order cate) {
            return base.Channel.TestAddAsync(cate);
        }
        
        public string TestUpdate(DemoWF.ServiceReference2.Order cate) {
            return base.Channel.TestUpdate(cate);
        }
        
        public System.Threading.Tasks.Task<string> TestUpdateAsync(DemoWF.ServiceReference2.Order cate) {
            return base.Channel.TestUpdateAsync(cate);
        }
        
        public string TestDelete(DemoWF.ServiceReference2.Order cate) {
            return base.Channel.TestDelete(cate);
        }
        
        public System.Threading.Tasks.Task<string> TestDeleteAsync(DemoWF.ServiceReference2.Order cate) {
            return base.Channel.TestDeleteAsync(cate);
        }
        
        public string TestGetUser(string user, string password) {
            return base.Channel.TestGetUser(user, password);
        }
        
        public System.Threading.Tasks.Task<string> TestGetUserAsync(string user, string password) {
            return base.Channel.TestGetUserAsync(user, password);
        }
        
        public string TestAddUser(DemoWF.ServiceReference2.User user) {
            return base.Channel.TestAddUser(user);
        }
        
        public System.Threading.Tasks.Task<string> TestAddUserAsync(DemoWF.ServiceReference2.User user) {
            return base.Channel.TestAddUserAsync(user);
        }
    }
}
